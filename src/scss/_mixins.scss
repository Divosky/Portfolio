%clearfix {
  *zoom: 1;

  &:after,
  &:before {
    content: "";
    display: table;
  }

  &:after {
    clear: both;
  }
}
/*
* .container-with-floated-children { @extend %clearfix; }
*/
@mixin opacity($opacity) {
  opacity    : $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}
/*
* .faded-text { @include opacity(0.8); }
*/


$breakpoints: (
    xs: 320px,  // extra small
    s:  768px,  // small
    m:  1440px, // middle
    l:  1920px  // large
);

@mixin breakpoint($bp, $rule: max-width) {
    @media screen and (#{$rule}: map-get($breakpoints, $bp)) {
        @content;
    }
}

@mixin triangle($direction, $size: 6px, $color: #222) {
  content : "";
  display : block;
  position: absolute;
  height  : 0;
  width   : 0;
  @if ($direction == 'up') {
    border-bottom: $size solid $color;
    border-left  : 1/2*$size solid transparent;
    border-right : 1/2*$size solid transparent;
  }
  @else if ($direction == 'down') {
    border-top  : $size solid $color;
    border-left : 1/2*$size solid transparent;
    border-right: 1/2*$size solid transparent;
  }
  @else if ($direction == 'left') {
    border-top   : 1/2*$size solid transparent;
    border-bottom: 1/2*$size solid transparent;
    border-right : $size solid $color;
  }
  @else if ($direction == 'right') {
    border-top   : 1/2*$size solid transparent;
    border-bottom: 1/2*$size solid transparent;
    border-left  : $size solid $color;
  }
}
/*
* @include triangle within a pseudo element and add positioning properties (ie. top, left)
* $direction: up, down, left, right
*/
@mixin ghostVerticalAlign() {
  &:before {
    content       : "";
    display       : inline-block;
    vertical-align: middle;
    height        : 100%;
    width         : 0.1px;
  }
}
